package com.duzonpay.testapi;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.6.2
 * 2018-04-19T13:29:56.703+09:00
 * Generated source version: 2.6.2
 * 
 */
@WebServiceClient(name = "DuzonPayWebService", 
                  wsdlLocation = "https://testapi.duzonpay.com:8143/webservice/duzonpay?wsdl",
                  targetNamespace = "http://testapi.duzonpay.com/") 
public class DuzonPayWebService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://testapi.duzonpay.com/", "DuzonPayWebService");
    public final static QName APIWebserviceImplPort = new QName("http://testapi.duzonpay.com/", "APIWebserviceImplPort");
    static {
        URL url = null;
        try {
            url = new URL("https://testapi.duzonpay.com:8143/webservice/duzonpay?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(DuzonPayWebService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "https://testapi.duzonpay.com:8143/webservice/duzonpay?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public DuzonPayWebService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public DuzonPayWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DuzonPayWebService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns APIWebservice
     */
    @WebEndpoint(name = "APIWebserviceImplPort")
    public APIWebservice getAPIWebserviceImplPort() {
        return super.getPort(APIWebserviceImplPort, APIWebservice.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns APIWebservice
     */
    @WebEndpoint(name = "APIWebserviceImplPort")
    public APIWebservice getAPIWebserviceImplPort(WebServiceFeature... features) {
        return super.getPort(APIWebserviceImplPort, APIWebservice.class, features);
    }

}
